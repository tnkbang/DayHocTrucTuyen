//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DayHocTrucTuyen
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class BaiDang
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public BaiDang()
        {
            this.BinhLuans = new HashSet<BinhLuan>();
            this.CamXucs = new HashSet<CamXuc>();
        }
    
        public string Ma_Bai { get; set; }
        public string Ma_Lop { get; set; }
        public string Ma_ND { get; set; }
        public System.DateTime Thoi_Gian { get; set; }
        public string Noi_Dung { get; set; }
        public string Dinh_Kem { get; set; }
        public bool Trang_Thai { get; set; }
    
        public virtual LopHoc LopHoc { get; set; }
        public virtual NguoiDung NguoiDung { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BinhLuan> BinhLuans { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CamXuc> CamXucs { get; set; }
        public virtual Ghim Ghim { get; set; }

        DayHocTrucTuyenEntities db = new DayHocTrucTuyenEntities();
        public string setMa(string maLop)
        {
            var last = (from b in db.BaiDangs
                        where b.Ma_Lop == maLop
                        orderby b.Ma_Bai descending
                        select b).FirstOrDefault();
            if (last == null)
            {
                return maLop + "-001";
            }
            int temp = int.Parse(Convert.ToString(last.Ma_Bai).Substring(12));
            string ma = maLop + "-" + Convert.ToString(1000 + temp + 1).Substring(1);
            return ma;
        }
        public NguoiDung getOwner()
        {
            BaiDang post = db.BaiDangs.FirstOrDefault(x => x.Ma_Bai == this.Ma_Bai);
            NguoiDung temp = db.NguoiDungs.FirstOrDefault(x => x.Ma_ND == post.Ma_ND);
            NguoiDung user = new NguoiDung();

            user.Ma_ND = temp.Ma_ND;
            user.Ho_Lot = temp.Ho_Lot;
            user.Ten = temp.Ten;
            user.Img_Avt = temp.Img_Avt;
            user.Img_BG = temp.Img_BG;

            return user;
        }
        public bool isOwner(string maUser)
        {
            var own = db.BaiDangs.FirstOrDefault(x => x.Ma_ND == maUser && x.Ma_Bai == this.Ma_Bai);
            if (own != null) { return true; }

            return false;
        }
        public int getSLCamXuc()
        {
            var sl = db.CamXucs.Where(x => x.Ma_Bai == this.Ma_Bai).Count();
            return sl;
        }
        public List<NguoiDung> getMemsCamXuc()
        {
            var mem = from n in db.NguoiDungs
                      join u in db.CamXucs on n.Ma_ND equals u.Ma_ND
                      where u.Ma_Bai == this.Ma_Bai
                      orderby u.Thoi_Gian descending
                      select n;
            foreach (var m in mem)
            {
                m.SDT = null;
                m.Mat_Khau = null;
                m.Email = null;
                m.Img_Nhan_Dien = null;
            }
            return mem.ToList();
        }
        public int getSLBinhLuan()
        {
            var sl = db.BinhLuans.Where(x => x.Ma_Bai == this.Ma_Bai).Count();
            return sl;
        }
        public NguoiDung getTTMember(string maND)
        {
            var user = db.NguoiDungs.FirstOrDefault(x => x.Ma_ND == maND);
            if (user != null)
            {
                user.SDT = null;
                user.Mat_Khau = null;
                user.Email = null;
                user.Img_Nhan_Dien = null;
            }

            return user;
        }
        public List<BinhLuan> getNDBinhLuan()
        {
            var bl = db.BinhLuans.Where(x => x.Ma_Bai == this.Ma_Bai);

            return bl.ToList();
        }
        public bool liked(string maND)
        {
            var liked = db.CamXucs.FirstOrDefault(x => x.Ma_ND == maND && x.Ma_Bai == this.Ma_Bai);
            if (liked == null) { return false; }
            return true;
        }
        public bool isGhim()
        {
            var ghim = db.Ghims.FirstOrDefault(x => x.Ma_Bai == this.Ma_Bai);
            if (ghim == null) { return false; }
            return true;
        }
    }
}
