//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DayHocTrucTuyen
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class CauHoiThi
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public CauHoiThi()
        {
            this.CauTraLois = new HashSet<CauTraLoi>();
        }
    
        public int STT { get; set; }
        public string Ma_Phong { get; set; }
        public string Cau_Hoi { get; set; }
        public string Loi_Giai { get; set; }
        public string Dap_An { get; set; }
    
        public virtual PhongThi PhongThi { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CauTraLoi> CauTraLois { get; set; }

        DayHocTrucTuyenEntities db = new DayHocTrucTuyenEntities();

        public bool isMultiAns(string lg)
        {
            string[] loigiai = new string[] { "" };
            loigiai = lg.Split('\\');
            if (loigiai.Length > 1) return true;
            return false;
        }
        public string getDapAnDung(string da, string lg)
        {
            string[] dapan = new string[] { "" };
            string[] loigiai = new string[] { "" };
            dapan = da.Split('\\');
            loigiai = lg.Split('\\');
            string result = "";

            for (int i = 0; i < loigiai.Length; i++)
            {
                for (int j = 0; j < dapan.Length; j++)
                {
                    if (loigiai[i].Equals(dapan[j]))
                    {
                        switch (j)
                        {
                            case 0:
                                result += ",A";
                                break;
                            case 1:
                                result += ",B";
                                break;
                            case 2:
                                result += ",C";
                                break;
                            case 3:
                                result += ",D";
                                break;
                        }
                    }
                }
            }
            return result.Substring(1);
        }
        public string getDapAnDungAsInt(string da, string lg)
        {
            string[] dapan = new string[] { "" };
            string[] loigiai = new string[] { "" };
            dapan = da.Split('\\');
            loigiai = lg.Split('\\');
            string result = "";

            for (int i = 0; i < loigiai.Length; i++)
            {
                for (int j = 0; j < dapan.Length; j++)
                {
                    if (loigiai[i].Equals(dapan[j]))
                    {
                        switch (j)
                        {
                            case 0:
                                result += ",0";
                                break;
                            case 1:
                                result += ",1";
                                break;
                            case 2:
                                result += ",2";
                                break;
                            case 3:
                                result += ",3";
                                break;
                        }
                    }
                }
            }
            return result.Substring(1);
        }

        public string getKyHieu(int vitri)
        {
            string result = "";
            switch (vitri)
            {
                case 0:
                    result += "A";
                    break;
                case 1:
                    result += "B";
                    break;
                case 2:
                    result += "C";
                    break;
                case 3:
                    result += "D";
                    break;
            }

            return result;
        }

        public bool traLoiDung(int stt, string maPhong, string maND, int lanthu)
        {
            var cauhoi = db.CauHoiThis.FirstOrDefault(x => x.STT == stt && x.Ma_Phong == maPhong);
            var traloi = db.CauTraLois.FirstOrDefault(x => x.STT == stt && x.Ma_Phong == maPhong && x.Ma_ND == maND && x.Lan_Thu == lanthu);
            if (traloi != null && traloi.Dap_An.Equals(cauhoi.Loi_Giai)) return true;

            return false;
        }
    }
}
